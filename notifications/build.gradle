import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask


plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id "com.github.davidmc24.gradle.plugin.avro" version "1.8.0"
}

group = 'ru.otus.java.pro.mt'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.confluent:kafka-avro-serializer:7.5.0'
    implementation 'org.apache.avro:avro:1.12.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
    stringType = "String"
    fieldVisibility = "PRIVATE"
    source 'src/main/resources/avro/schemas/'
    outputDir file('build/generated/')
}

sourceSets {
    main {
        java.srcDirs += "$buildDir/generated"
    }
}

tasks.named("compileJava").configure {
    source(generateAvro)
}
