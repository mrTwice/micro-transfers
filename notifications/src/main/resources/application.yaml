server:
  port: 8080
spring:
  application:
    name: mt-notifications
  kafka:
    consumer:
      properties:
        schema.registry.url: http://localhost:8081
        specific.avro.reader: true
        allow.auto.create.topics: true
        enable.auto.commit: false
      bootstrap-servers: localhost:9092
      group-id: mt.transfers.status.info.group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
    producer:
      properties:
        schema.registry.url: http://localhost:8081
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
#        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

topics:
  status.info: mt.transfers.status.info